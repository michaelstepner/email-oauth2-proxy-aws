#cloud-config

# Set stable SSH host key
ssh_keys:
  ed25519_private: |
    ${indent(4, ssh_host_ed25519_privkey)}
  ed25519_public: ${ssh_host_ed25519_pubkey}

# Install packages
packages:
  - nano
  - git
  - python3-pip
  - iptables

# Write out config file for email-oauth2-proxy
write_files:
  - path: /tmp/personal.config
    encoding: base64
    content: ${base64encode(email_oauth2_proxy_config)}
    permissions: '0640'
  - path: /tmp/fullchain.pem
    encoding: base64
    content: ${base64encode(cert_fullchain)}
    permissions: '0640'
  - path: /tmp/privkey.pem
    encoding: base64
    content: ${base64encode(cert_privkey)}
    permissions: '0640'
  - path: /etc/systemd/system/emailproxy.service
    owner: root:root
    permissions: '0755'
    content: |
      [Unit]
      Description=Email OAuth 2.0 Proxy

      [Service]
      User=ec2-user
      WorkingDirectory=/home/ec2-user/email-oauth2-proxy
      ExecStart=python3 emailproxy.py --no-gui --local-server-auth --config-file personal.config --cache-store aws:${email_oauth2_aws_secret_arn}
      Restart=always

      [Install]
      WantedBy=multi-user.target

# Run commands
runcmd:
  # Configure timezone (which will be used in email-oauth2-proxy log's timestamps)
  - rm /etc/localtime
  - timedatectl set-timezone ${timezone}
  # Redirect port 465 to port 1465, since only root can host on ports < 1024
  - iptables -A PREROUTING -t nat -p tcp --dport 465 -j REDIRECT --to-port 1465
  # Install email-oauth2-proxy
  - sudo -u ec2-user git clone --depth 1 --branch ${email_oauth2_proxy_version} ${email_oauth2_proxy_repo} /home/ec2-user/email-oauth2-proxy
  - sudo -u ec2-user rm -rf /home/ec2-user/email-oauth2-proxy/.git
  - sudo -u ec2-user python3 -m pip install -r /home/ec2-user/email-oauth2-proxy/requirements-no-gui.txt
  - sudo -u ec2-user python3 -m pip install boto3
  # Configure email-oauth2-proxy
  - mv /tmp/personal.config /home/ec2-user/email-oauth2-proxy/personal.config
  - mv /tmp/fullchain.pem /home/ec2-user/email-oauth2-proxy/fullchain.pem
  - mv /tmp/privkey.pem /home/ec2-user/email-oauth2-proxy/privkey.pem
  - sed -i "s/{{private_ip}}/$(hostname -I)/g" /home/ec2-user/email-oauth2-proxy/personal.config
  - sed -i "s/{{aws_secret_arn}}/${email_oauth2_aws_secret_arn}/g" /home/ec2-user/email-oauth2-proxy/personal.config
  - chown ec2-user:ec2-user /home/ec2-user/email-oauth2-proxy/personal.config
  - chown root:ec2-user /home/ec2-user/email-oauth2-proxy/fullchain.pem
  - chown root:ec2-user /home/ec2-user/email-oauth2-proxy/privkey.pem
  # Configure AWS credentials
  - mkdir -p /home/ec2-user/.aws
  - touch /home/ec2-user/.aws/credentials
  - chmod 600 /home/ec2-user/.aws/credentials
  - |
    cat > /home/ec2-user/.aws/credentials <<EOL
    [default]
    aws_access_key_id = ${aws_access_key_id}
    aws_secret_access_key = ${aws_secret_access_key}
    EOL
  - touch /home/ec2-user/.aws/config
  - chmod 600 /home/ec2-user/.aws/config
  - |
    cat > /home/ec2-user/.aws/config <<EOL
    [default]
    region = ${aws_region}
    EOL
  - chown -R ec2-user:ec2-user /home/ec2-user/.aws/
  # Launch email-oauth2-proxy
  - systemctl daemon-reload
  - systemctl enable emailproxy.service --now
